/**
 * Generated by orval v6.12.1 üç∫
 * Do not edit manually.
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 * OpenAPI spec version: 5.0.10
 */
import type {
  WorkMessage,
  Transactions,
  RewardAddress,
  RewardPubKey,
  PowSolutions,
} from '../types';
import { axios } from '../axios';

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P
) => any
  ? P
  : never;

/**
 * @summary Request block candidate
 */
export const miningRequestBlockCandidate = (
  options?: SecondParameter<typeof axios>
) => {
  return axios<WorkMessage>(
    { url: `/mining/candidate`, method: 'get' },
    options
  );
};
/**
 * @summary Request block candidate
 */
export const miningRequestBlockCandidateWithMandatoryTransactions = (
  transactions: Transactions,
  options?: SecondParameter<typeof axios>
) => {
  return axios<WorkMessage>(
    {
      url: `/mining/candidateWithTxs`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: transactions,
    },
    options
  );
};
/**
 * @summary Read miner reward address
 */
export const miningReadMinerRewardAddress = (
  options?: SecondParameter<typeof axios>
) => {
  return axios<RewardAddress>(
    { url: `/mining/rewardAddress`, method: 'get' },
    options
  );
};
/**
 * @summary Read public key associated with miner rewards
 */
export const miningReadMinerRewardPubkey = (
  options?: SecondParameter<typeof axios>
) => {
  return axios<RewardPubKey>(
    { url: `/mining/rewardPublicKey`, method: 'get' },
    options
  );
};
/**
 * @summary Submit solution for current candidate
 */
export const miningSubmitSolution = (
  powSolutions: PowSolutions,
  options?: SecondParameter<typeof axios>
) => {
  return axios<void>(
    {
      url: `/mining/solution`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: powSolutions,
    },
    options
  );
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type MiningRequestBlockCandidateResult = NonNullable<
  Awaited<ReturnType<typeof miningRequestBlockCandidate>>
>;
export type MiningRequestBlockCandidateWithMandatoryTransactionsResult =
  NonNullable<
    Awaited<
      ReturnType<typeof miningRequestBlockCandidateWithMandatoryTransactions>
    >
  >;
export type MiningReadMinerRewardAddressResult = NonNullable<
  Awaited<ReturnType<typeof miningReadMinerRewardAddress>>
>;
export type MiningReadMinerRewardPubkeyResult = NonNullable<
  Awaited<ReturnType<typeof miningReadMinerRewardPubkey>>
>;
export type MiningSubmitSolutionResult = NonNullable<
  Awaited<ReturnType<typeof miningSubmitSolution>>
>;
