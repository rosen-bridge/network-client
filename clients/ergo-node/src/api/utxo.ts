/**
 * Generated by orval v6.12.1 üç∫
 * Do not edit manually.
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 * OpenAPI spec version: 5.0.7
 */
import type {
  SerializedAdProof,
  TransactionBoxId,
  SerializedBox,
  ErgoTransactionOutput,
} from '../types';
import { axios } from '../axios';

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P
) => any
  ? P
  : never;

/**
 * @summary Get serialized batch proof for given set of boxes
 */
export const getBoxesBinaryProof = (
  transactionBoxId: TransactionBoxId[],
  options?: SecondParameter<typeof axios>
) => {
  return axios<SerializedAdProof>(
    {
      url: `/utxo/getBoxesBinaryProof`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: transactionBoxId,
    },
    options
  );
};
/**
 * @summary Get serialized box from UTXO pool in Base16 encoding by an identifier.
 */
export const getBoxByIdBinary = (
  boxId: string,
  options?: SecondParameter<typeof axios>
) => {
  return axios<SerializedBox>(
    { url: `/utxo/byIdBinary/${boxId}`, method: 'get' },
    options
  );
};
/**
 * @summary Get box contents for a box by a unique identifier, from UTXO set and also the mempool.
 */
export const getBoxWithPoolById = (
  boxId: string,
  options?: SecondParameter<typeof axios>
) => {
  return axios<ErgoTransactionOutput>(
    { url: `/utxo/withPool/byId/${boxId}`, method: 'get' },
    options
  );
};
/**
 * @summary Get serialized box in Base16 encoding by an identifier, considering also the mempool.
 */
export const getBoxWithPoolByIdBinary = (
  boxId: string,
  options?: SecondParameter<typeof axios>
) => {
  return axios<SerializedBox>(
    { url: `/utxo/withPool/byIdBinary/${boxId}`, method: 'get' },
    options
  );
};
/**
 * @summary Get genesis boxes (boxes existed before the very first block)
 */
export const genesisBoxes = (options?: SecondParameter<typeof axios>) => {
  return axios<ErgoTransactionOutput[]>(
    { url: `/utxo/genesis`, method: 'get' },
    options
  );
};
export type GetBoxesBinaryProofResult = NonNullable<
  Awaited<ReturnType<typeof getBoxesBinaryProof>>
>;
export type GetBoxByIdBinaryResult = NonNullable<
  Awaited<ReturnType<typeof getBoxByIdBinary>>
>;
export type GetBoxWithPoolByIdResult = NonNullable<
  Awaited<ReturnType<typeof getBoxWithPoolById>>
>;
export type GetBoxWithPoolByIdBinaryResult = NonNullable<
  Awaited<ReturnType<typeof getBoxWithPoolByIdBinary>>
>;
export type GenesisBoxesResult = NonNullable<
  Awaited<ReturnType<typeof genesisBoxes>>
>;
