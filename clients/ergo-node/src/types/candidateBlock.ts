/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 * OpenAPI spec version: 5.0.10
 */
import type { Digest32 } from './digest32';
import { bigIntsDigest32 } from './digest32';
import type { Timestamp } from './timestamp';
import { bigIntsTimestamp } from './timestamp';
import type { ADDigest } from './aDDigest';
import { bigIntsADDigest } from './aDDigest';
import type { SerializedAdProof } from './serializedAdProof';
import { bigIntsSerializedAdProof } from './serializedAdProof';
import type { ModifierId } from './modifierId';
import { bigIntsModifierId } from './modifierId';
import type { Transactions } from './transactions';
import { bigIntsTransactions } from './transactions';
import type { Votes } from './votes';

import { bigIntsVotes } from './votes';

/**
 * Can be null if node is not mining or candidate block is not ready
 */
export type CandidateBlock = {
  version?: number;
  extensionHash: Digest32;
  timestamp?: Timestamp;
  stateRoot?: ADDigest;
  nBits?: bigint;
  adProofBytes?: SerializedAdProof;
  parentId: ModifierId;
  transactionsNumber?: number;
  transactions?: Transactions;
  votes?: Votes;
} | null;

export const bigIntsCandidateBlock = [
  ...bigIntsDigest32.map((item) => `extensionHash.${item}`),
  ...bigIntsTimestamp.map((item) => `timestamp.${item}`),
  ...bigIntsADDigest.map((item) => `stateRoot.${item}`),
  'nBits',
  ...bigIntsSerializedAdProof.map((item) => `adProofBytes.${item}`),
  ...bigIntsModifierId.map((item) => `parentId.${item}`),
  ...bigIntsTransactions.map((item) => `transactions.${item}`),
  ...bigIntsVotes.map((item) => `votes.${item}`),
];
