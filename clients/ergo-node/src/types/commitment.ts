/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Ergo Node API
 * API docs for Ergo Node. Models are shared between all Ergo products
 * OpenAPI spec version: 5.0.10
 */
import type { CommitmentHint } from './commitmentHint';
import { bigIntsCommitmentHint } from './commitmentHint';
import type { SigmaBoolean } from './sigmaBoolean';
import { bigIntsSigmaBoolean } from './sigmaBoolean';
import type { CommitmentType } from './commitmentType';

import { bigIntsCommitmentType } from './commitmentType';

/**
 * basic trait for prover commitments
 */
export interface Commitment {
  hint: CommitmentHint;
  pubkey: SigmaBoolean;
  position: string;
  type?: CommitmentType;
  /** a group element of the commitment */
  a: string;
  /** b group element of the commitment (needed for DHT protocol only) */
  b?: string;
}

export const bigIntsCommitment = [
  ...bigIntsCommitmentHint.map((item) =>
    item === '' ? 'hint' : `hint.${item}`
  ),
  ...bigIntsSigmaBoolean.map((item) =>
    item === '' ? 'pubkey' : `pubkey.${item}`
  ),
  ...bigIntsCommitmentType.map((item) =>
    item === '' ? 'type' : `type.${item}`
  ),
];
