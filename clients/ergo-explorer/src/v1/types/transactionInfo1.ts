/**
 * Generated by orval v6.15.0 🍺
 * Do not edit manually.
 * Ergo Explorer API v1
 * OpenAPI spec version: 1.0
 */
import type { InputInfo1 } from './inputInfo1';
import { bigIntsInputInfo1 } from './inputInfo1';
import type { DataInputInfo1 } from './dataInputInfo1';
import { bigIntsDataInputInfo1 } from './dataInputInfo1';
import type { OutputInfo1 } from './outputInfo1';

import { bigIntsOutputInfo1 } from './outputInfo1';

export interface TransactionInfo1 {
  /** Transaction ID */
  id: string;
  /** ID of the corresponding header */
  headerId: string;
  /** Height of the block the transaction was included in */
  inclusionHeight: number;
  /** Timestamp the transaction got into the network */
  timestamp: bigint;
  /** Index of a transaction inside a block */
  index: number;
  /** Number of transaction confirmations */
  confirmationsCount: number;
  inputs?: InputInfo1[];
  dataInputs?: DataInputInfo1[];
  outputs?: OutputInfo1[];
}

export const bigIntsTransactionInfo1 = [
  'timestamp',
  ...bigIntsInputInfo1.map((item) => `inputs.${item}`),
  ...bigIntsDataInputInfo1.map((item) => `dataInputs.${item}`),
  ...bigIntsOutputInfo1.map((item) => `outputs.${item}`),
];
